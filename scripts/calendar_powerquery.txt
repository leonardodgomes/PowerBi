Choose the best approach to define the dates:

let
    //Define the start date
        MinDate = #date(2023,01,01), //Hardcode date
        or
        MinDate = List.Min(TABLE[COLUMN), //Based in a existing table
    
    //Define the last day from the table
        MaxDate = #date(Date.Year(DateTime.LocalNow()),Date.Month(DateTime.LocalNow()),Date.Day(DateTime.LocalNow())), //TODAY() FUNCTION EQUIVALENT
        or
        MaxDate = #date(2023,01,01), //Hardcode date
        or
        MaxDate = List.Max(TABLE[COLUMN), //Use the last date in the Sales table
        or
        MaxDate = Date.EndOfYear(List.Max(TABLE[COLUMN)) //Get the max date and define the last day of the year

    NoDays=Number.From(MaxDate-MinDate)+1,
    Source = List.Dates(MinDate, NoDays, #duration(1, 0, 0, 0)),
    #"Converted to Table" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Renamed Columns" = Table.RenameColumns(#"Converted to Table",{{"Column1", "Date"}}),
    #"Changed Type" = Table.TransformColumnTypes(#"Renamed Columns",{{"Date", type date}}),
    #"Inserted Day" = Table.AddColumn(#"Changed Type", "Day", each Date.Day([Date]), Int64.Type),
    #"Inserted Month Name" = Table.AddColumn(#"Inserted Day", "Month Name", each Date.MonthName([Date]), type text),
    #"Inserted Year" = Table.AddColumn(#"Inserted Month Name", "Year", each Date.Year([Date]), Int64.Type),
    #"Inserted Quarter" = Table.AddColumn(#"Inserted Year", "Quarter", each Date.QuarterOfYear([Date]), Int64.Type),
    #"Inserted Day Name" = Table.AddColumn(#"Inserted Quarter", "Day Name", each Date.DayOfWeekName([Date]), type text)
in
    #"Inserted Day Name"
